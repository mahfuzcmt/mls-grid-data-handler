buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "https://repo.maven.apache.org/maven2" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "org.grails.plugins:hibernate5:7.1.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.3.4"
    }
}




version "1.0"
group "mls"


apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.bertramlabs.asset-pipeline"

repositories {
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "https://repo.maven.apache.org/maven2" }
}

configurations {
    create("compile")
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:events"
    implementation "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtimeOnly "org.glassfish.web:el-impl:2.1.2-b03"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.3.4"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.grails.plugins:geb"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testImplementation "net.sourceforge.htmlunit:htmlunit:2.18"


    implementation "org.grails.plugins:hibernate5"
    implementation "org.hibernate:hibernate-core:5.5.7.Final"
    runtimeOnly 'mysql:mysql-connector-java:8.0.17'
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"

    implementation('org.grails.plugins:quartz:2.0.13') {
        exclude group: 'org.quartz-scheduler', module: 'quartz'
    }
    implementation 'org.quartz-scheduler:quartz:2.3.2'

}

bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx10240m'
    )
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
    if(System.getProperty("server.port") != null)
    {
        systemProperty "server.port", System.getProperty("server.port")
    }
}

//assets {
//    minifyJs = true
//    minifyCss = true
//}
